#!/bin/sh

source /usr/local/lib/libemu
EMU_ECHO_PREFIX=$(basename "$0")
SOURCE_DIR="$(pwd)"
CONF_DIR="$SOURCE_DIR/.$PROG"

help ()
{
    man emu-init
}

clean_emu_dir ()
{
    if [ ! -d "$SOURCE_DIR/.$PROG/sinks" ]
    then
        emu_error "not an emu source"
        exit 5
    fi

    rm $EMU_VERBOSE -rf "$SOURCE_DIR/.$PROG"

    if ! (( $EMU_QUIET ))
    then
        emu_echo "emptied source in $SOURCE_DIR/.$PROG"
    fi
}

create_directories ()
{
    mkdir $EMU_VERBOSE -p "$CONF_DIR"
    mkdir $EMU_VERBOSE -p "$CONF_DIR/config"
    mkdir $EMU_VERBOSE -p "$CONF_DIR/hooks"
    mkdir $EMU_VERBOSE -p "$CONF_DIR/sinks"
    chmod 0755 "$CONF_DIR/sinks"
}

copy_template_files ()
{
    # Copy over files from shared templates dir.
    rsync $EMU_VERBOSE -ah $TEMPLATE_UPDATE "$EMU_SOURCE_TEMPLATE_DIR/" "$SOURCE_DIR/.$PROG/"
}

init_filesystem ()
{
    create_directories
    copy_template_files
}

emu_init ()
{
    if [[ -d .emu ]]
    then
        init_filesystem
        if ! (( $EMU_QUIET ))
        then
            emu_echo "reinitialized existing source in $CONF_DIR"
        fi
    else
        init_filesystem
        if ! (( $EMU_QUIET ))
        then
            emu_echo "initialized source in $CONF_DIR"
        fi
    fi
}


main ()
{
    TEMPLATE_UPDATE="-u"

    while getopts ":qvCRt:" OPT
    do
        case $OPT in
            q)
                EMU_QUIET=1
                ;;
            C)
                EMU_DIR_CLEAN=1
                ;;
            v)
                EMU_VERBOSE="-v"
                ;;
            R)
                TEMPLATE_UPDATE=""
                ;;
            t)
                EMU_SOURCE_TEMPLATE_DIR="$OPTARG"
                if [ ! -d "$EMU_SOURCE_TEMPLATE_DIR" ]
                then
                    emu_error "'$OPTARG' not a directory"
                    exit 1
                fi
                ;;
            \?)
                emu_error "invalid option: -$OPTARG"
                exit 1
                ;;
            :)
                emu_error "option -$OPTARG requires an argument"
                exit 1
                ;;
        esac
    done

    # Dispose of args.
    while [ "${1:0:1}" = "-" ]
    do
        shift
    done

    if [ "$1" = "help" ]
    then
        help
        exit 0
    fi

    if [ "$EMU_SOURCE_TEMPLATE_DIR" == "" ]
    then
        EMU_SOURCE_TEMPLATE_DIR="/usr/share/$PROG/source-templates"
    fi

    exit_if_no_dir_permissions "$SOURCE_DIR"

    if (( $EMU_DIR_CLEAN ))
    then
        clean_emu_dir
        exit 0
    fi

    emu_init
    exit 0
}
main $@
