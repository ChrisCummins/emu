#!/bin/bash

source /usr/share/emu/emu-util
SCRIPT=$(basename $0)
SOURCE_DIR="$(pwd)"

help ()
{
    cat <<EOF | less
NAME
        $SCRIPT - show sink snapshot logs

SYNOPSIS
        $PROG log [OPTION...] [<sink>][:<snapshot>]...

DESCRIPTION
        Show $PROG snapshot logs for one or more sinks. If no <sink> is
        speficied, show logs for all sinks. If a <sink> is specified, show
        snapshot logs for only that sink. By specifying a :<snapshot>, the log
        for only that snapshot will be shown. The command uses the standard
        <sink>:<snapshot> syntax.

OPTIONS
        -n <number>
                   limit the number of snapshot logs to the given number
        -s
                   show a dense summary of only vital information, suitable for
                   reports or logs

EOF
}

print_node_verbose ()
{
cat <<EOF >>.emu_log
$NODE
  Date: $DATE
  Size: $SIZE

EOF
}

print_node_dense ()
{
cat <<EOF >>.emu_log
 $NODE * $DATE
EOF
}

# Print the nodes for a sink.
#
# @param $1 Name of sink.
print_nodes ()
{
    print_sink_details $1 >> .emu_log

    SINK_PATH="$(cat $SOURCE_DIR/.$PROG/sinks/$1)"
    for NODE in $(ls "$SINK_DIR/.$PROG/nodes" | sort -r)
    do
        NODE_PATH="$SINK_PATH/.$PROG/nodes/$NODE"
        DATE="$(cat $NODE_PATH | grep Date | sed -r 's/Date +(.*)/\1/')"
        SIZE="$(cat $NODE_PATH | grep Size | sed -r 's/Size +(.*)/\1/')"

        print_node_verbose $NODE
    done
    cat .emu_log | less
    rm -f .emu_log
}

main ()
{
    if [[ "$1" == "help" ]]
    then
        help
        exit 0
    fi

    pre_exec_hooks "$SOURCE_DIR"

    if [[ "$1" == "" ]]
    then
        echo "$SCRIPT: no sink specified"
        exit_with_error "$SOURCE_DIR"
    fi

    SINK_DIR="$(cat $SOURCE_DIR/.$PROG/sinks/$1 2>/dev/null)"
    if [[ ! -d "$SINK_DIR" ]]
    then
        echo "$SCRIPT: sink '$1' does not exist" >&2
        exit_with_error "$SOURCE_DIR"
    fi

    print_nodes "$1"

    post_exec_hooks "$SOURCE_DIR"
    exit 0
}
main $@
