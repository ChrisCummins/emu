.TH emu-init 1  "January 17, 2013" "version 0.0.2" "Emu Manual"
.SH NAME
emu\-init \- Create or reinitialize an existing emu source
.SH SYNOPSIS
.B emu init
[help] [\-v] q[\-t <template-dir>] [\-q] [\-R] [\-C]
.SH DESCRIPTION
This command creates an empty emu source. This means creating a .emu
directory with subdirectories for hooks, sink refs and configuration files.
.PP
During the init process, template files are copied from the global templates
path, normally /usr/share/emu. Use of option -t to specify a template directory
will supercede this.
.PP
This command is non-destructive, running it on an existing emu source will not
overwrite any existing data. Instead, it can be used to rescue a broken source,
as it will silently replace or recreate any missing files. If you have broken a
file and would like to revert to the default, delete it and run this command.
.SH OPTIONS
.TP
\-v
increase verbosity
.TP
\-t <template-dir>
specify the directory from which templates will be used. Alternatively this can
be specified using the EMU_SOURCE_TEMPLATE_DIR environment variable
.TP
\-q
only print error and warning messages, all other output will be suppressed
.TP
\-R
if a file exists in both the template and source directories, replace the source
file with the template
.TP
\-C
clean directory. This undoes the effect of an init, clearing the .emu
directory. It does not affect sinks, though it will remove refs to them
.SH EXAMPLES
.TP
Start an emu source in the current directory:
$ emu init -v
.TP
Use a custom template directory:
$ emu init -vt=/usr/site/emu/source-templates
.TP
Repair a broken source:
$ emu init -R
.PP
.TP
Delete an emu source:
$ emu init -C
.PP
.SH EMU
Part of the
.B emu
(1)
suite
.SH AUTHOR
Chris Cummins <chrisc.101@gmail.com>
.SH SEE ALSO
.B emu
(1)
